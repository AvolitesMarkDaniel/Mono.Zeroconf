2007-12-19  Aaron Bockover  <abockover@novell.com>

	0.7.3 Released

	* NEWS: Updated

2007-11-30  Aaron Bockover  <abockover@novell.com>

	* src/Mono.Zeroconf/Mono.Zeroconf.Providers/ProviderFactory.cs: Check for 
	the root path element in the path split since Windows is stupid

2007-11-30  Aaron Bockover  <abockover@novell.com>

	* configure.ac: Check the host for OS X/Darwin and set mdns_target_library
	to libc, since that's where their mDNSResponder APIs are; set it to
	libnss_mdns-0.2.so for everything else (Linux, since the mapping name
	is valid for Windows, the .config file doesn't need shipping)

	* src/Mono.Zeroconf.Providers.Bonjour/Mono.Zeroconf.Providers.Bonjour.dll.config.in:
	Moved to .in since we need to generate it for Linux/Darwin

2007-08-28  Aaron Bockover  <abockover@novell.com>

	0.7.2 Released

	* configure.ac: Bump to 0.7.2

	* src/Mono.Zeroconf.Providers.Avahi/Mono.Zeroconf.Providers.Avahi/ZeroconfProvider.cs:
	Try to connect to the daemon to see if provider will be available

	* src/Mono.Zeroconf/Mono.Zeroconf.Providers/ProviderFactory.cs: Throw
	a meaningful exception if no providers are available

2007-08-28  Aaron Bockover  <abockover@novell.com>

	* docs/*: Updated docs

2007-08-28  Aaron Bockover  <abockover@novell.com>

	* src/MZClient/ZeroconfClient.cs:
	* src/Mono.Zeroconf.Providers.Avahi/Mono.Zeroconf.Providers.Avahi/AvahiUtils.cs:
	Use NameConflict, not AlreadyRegistered if there is a name conflict 
	error when registering a service

2007-08-27  Aaron Bockover  <abockover@novell.com>

	0.7.1 Released

	* src/Mono.Zeroconf.Providers.Avahi/Makefile.am:
	* src/MZClient/Makefile.am: Install mdb files

	* src/Mono.Zeroconf/Makefile.am: Removed old install stuff

2007-08-27  Aaron Bockover  <abockover@novell.com>

	* configure.ac: Check for gacutil

	* src/mono-zeroconf.pc.in: Updated to reflect GAC path

	* src/mono-zeroconf.snk: Added strong name key file

	* src/Makefile.am: Keyfile

	* src/Mono.Zeroconf/Mono.Zeroconf.Providers/ProviderFactory.cs: Support
	loading plugins from the libdir location based on the GAC assembly path

	* src/Mono.Zeroconf/Makefile.am: Install into the GAC

	* docs/Makefile.am: Fixed up to not need MonodocNodeConfig 

2007-08-27  Aaron Bockover  <abockover@novell.com>

	* src/MZClient/ZeroconfClient.cs: Make the default browse type _workstation

2007-08-23  Aaron Bockover  <abockover@novell.com>

	* configure.ac: Make the version alpha1 for a test release

	* docs/: Updated

2007-08-23  Aaron Bockover  <abockover@novell.com>

	* src/Mono.Zeroconf.Providers.Avahi/Mono.Zeroconf.Providers.Avahi/RegisterService.cs:
	Export the TXT record

2007-08-23  Aaron Bockover  <abockover@novell.com>

	* src/Mono.Zeroconf.Providers.Avahi/Mono.Zeroconf.Providers.Avahi/ZeroconfProvider.cs:
	Provide the register service and TXT record class

	* src/Mono.Zeroconf.Providers.Avahi/Mono.Zeroconf.Providers.Avahi/RegisterService.cs:
	Implemented a register service for Avahi

	* src/Mono.Zeroconf.Providers.Avahi/Mono.Zeroconf.Providers.Avahi/AvahiUtils.cs:
	Some small utility functions

	* src/MZClient/ZeroconfClient.cs: Support the response event 
	on RegisterService

	* src/Mono.Zeroconf.Providers.Bonjour/Mono.Zeroconf.Providers.Bonjour/RegisterService.cs:
	Updated to reflect IRegisterService API changes

	* src/Mono.Zeroconf/Mono.Zeroconf/RegisterService.cs:
	* src/Mono.Zeroconf/Mono.Zeroconf/IRegisterService.cs: Added a Response
	event

	* src/Mono.Zeroconf/Mono.Zeroconf/RegisterServiceEventArgs.cs:
	* src/Mono.Zeroconf/Mono.Zeroconf/RegisterServiceEventHandler.cs:
	Moved from Bonjour and generalized

	* src/Mono.Zeroconf/Mono.Zeroconf/ServiceErrorCode.cs: Generalized error
	codes that providers are expected to use

2007-08-23  Aaron Bockover  <abockover@novell.com>

	* src/Mono.Zeroconf.Providers.Avahi/Mono.Zeroconf.Providers.Avahi/ServiceBrowser.cs:
	Added service removed support

2007-08-23  Aaron Bockover  <abockover@novell.com>

	* configure.ac: Allow mDNSResponder to be disabled; link against 
	avahi-sharp again since the DBus effort is on pause for now

	* src/Mono.Zeroconf.Providers.Avahi/*: Restored the avahi-sharp version
	of the Avahi provider

	* src/Mono.Zeroconf.Providers.AvahiDBus/*: Added code for the Avahi DBus
	provider, but this does not build. It's just a safe keeping for the 
	future when we may actually be able to implement the Avahi DBus provider;
	there are some things that may need addressing in NDesk DBus and/or
	Avahi proper

2007-08-21  Aaron Bockover  <abockover@novell.com>

	* Mono.Zeroconf: Tons of reorg, cleanup, etc. Mono.Zeroconf will soon
	be released alongside Mono - preparing for this

	* docs/: Initial work on filling in documentation

2006-11-28  Aaron Bockover  <abockover@novell.com>

	* Mono.Zeroconf.Avahi/*: Initial Avahi implementation (no registration yet)

	* Mono.Zeroconf/ZeroconfProvider.cs: Load providers at runtime (Avahi)

	* Mono.Zeroconf/*.cs: 
	* Test/Makefile: 
	* Makefile:
	* Mono.Zeroconf.mds: Updated

2006-11-28  Aaron Bockover  <abockover@novell.com>

	* Mono.Zeroconf/*.cs: New generic API/wrapper layer around MDNS provider
	layers. The top-level Mono.Zeroconf namespace is now the preferred API
	for applications. This API does runtime provider detection.

	* Mono.Zeroconf/Mono.Zeroconf.Bonjour/*.cs: Moved the mDNSResponder
	implementation and refactored pieces to work with the above generic
	API. This implementation is now available directly through the 
	Mono.Zeroconf.Bonjour namespace and is just one provider.

	* Project: Cleaned up Makefiles, MonoDevelop solution/projects

2006-04-24  Aaron Bockover  <aaron@abock.org>

	* Test/ZeroConfTest.cs: removed

	* Test/ZeroconfClient.cs: Added new replacement client (mzclient) for the 
	mDNSClient tool that ships with Bonjour on UNIX. mzclient supports 
	service resolving and publishing, unlinke mDNSClient

	* Test/mzclient.in: Added wrapper script for mzclient.exe

	* Mono.Zeroconf/Makefile: Build mzclient.exe and added install-client
	rule for installing mzclient into /usr (hardcoded for now)

	* Mono.Zeroconf.mdp: Updated MonoDevelop project

2006-04-07  James Willcox  <snorp@snorp.net>

	* Mono.Zeroconf/ServiceType.cs: the enum should use
	a ushort as its value.
	* Mono.Zeroconf/ServiceClass.cs: ditto

	Make stuff work on win32

2006-04-04  Aaron Bockover  <aaron@abock.org>

	* Mono.Zeroconf/Native.cs: Added DNSServiceCreateConnection

	* Mono.Zeroconf/Service.cs: Added a static Zeroconf class with a 
	simple Initialize method to test creating and destroying a connection
	to the daemon

	* Test/ZeroConfTest.cs: Added a test call to Zeroconf.Initialize() 

2006-03-11  James Willcox  <snorp@snorp.net>

	* Mono.Zeroconf/BrowseService.cs: pass the interface index
	to DNSServiceQueryRecord when getting the IP address.

2006-03-07  James Willcox  <snorp@snorp.net>

	* Mono.Zeroconf/Native.cs: change the P/Invoke dll to
	dnssd.dll, which works on Windows.
	* Mono.Zeroconf/Mono.Zeroconf.config: ditto

2006-03-07  Aaron Bockover  <aaron@abock.org>

	* Mono.Zeroconf/BrowseService.cs: Use DNSServiceQueryRecord to run an
	A query to resolve IP addresses

	* Mono.Zeroconf/Service.cs (set_HostTarget): Removed set modifier; no
	.local. stripping and do not try to resolve using gethostbyname

2006-03-05  Aaron Bockover  <aaron@abock.org>

	* Test/ZeroConfTest.cs: Added a test call to RefreshTxtRecord()

	* Mono.Zeroconf.mdp: Updated MonoDevelop project

	* Mono.Zeroconf/BrowseService.cs: Allow TXT record refreshing using
	DNSServiceQueryRecord

	* Mono.Zeroconf/Native.cs: Added support for DNSServiceQueryRecord

	* Mono.Zeroconf/ServiceBrowser.cs:
	* Mono.Zeroconf/RegisterService.cs: Call Thread.ResetAbort() when
	handling a ThreadAbortException to allow execution to continue in thread

2006-02-20  Aaron Bockover  <aaron@abock.org>

	* Mono.Zeroconf/Service.cs (set_HostTarget): Was still using value
	to look up host; use the stripped hosttarget string instead

2006-02-20  Aaron Bockover  <aaron@abock.org>

	* Mono.Zeroconf/Service.cs (set_HostTarget): If target ends with .local.,
	strip it before resolving as System.Net.Dns.GetHostByName will fail to
	resolve if there is a VPN connection

2006-02-15  Aaron Bockover  <aaron@abock.org>

	* Mono.Zeroconf: Renamed everything from Mono.ZeroConf to Mono.Zeroconf
	as that's what Apple calls it; cleaned up build system

	* Mono.Zeroconf: First pass at fully-functioning mDNSResponder wrapping;
	it is ready for inclusion in daap-sharp

2006-01-16  Aaron Bockover  <aaron@aaronbock.net>

	* Mono.ZeroConf: Setup to work with mono build system; initial import
	into testing SVN for initial development (abock.org)


